# Copyright (c) Microsoft Corporation
# SPDX-License-Identifier: MIT

# This workflow executes a single test, optionally gathering code coverage and logs.

parameters:
  - name: name
    type: string
  # Job dependency
  - name: dependency
    type: string
  # The test command to invoke.
  - name: test_command
    type: string
  # The name of the build artifact to download.
  - name: build_artifact
    type: string
  # The environment to run this test on.
  - name: environment
    type: string
  # Set to true to gather code coverage when this test runs.
  - name: code_coverage
    type: boolean
    default: false
  # Set to true to gather and upload memory dumps if a test process crashes.
  - name: gather_dumps
    type: boolean
    default: false
  - name: pre_test
    type: string
    default: ''
  - name: post_test
    type: string
    default: ''
  - name: capture_etw
    type: boolean
    default: false
  # Set to true to use Visual Studio Developer command shell.
  - name: vs_dev
    type: boolean
    default: false
  - name: fault_injection
    type: boolean
    default: false
  - name: leak_detection
    type: boolean
    default: false

jobs:
  - job: ${{parameters.name}}
    dependsOn: ${{parameters.dependency}}
    timeoutInMinutes: 60

    strategy:
      matrix:
        Debug:
          buildConfiguration: 'Debug'
        Release:
          buildConfiguration: 'Release'
      maxParallel: 2

    pool:
      vmImage: ${{parameters.environment}}
      type: windows

    variables:
      # Configuration type to build.
      PROJECT_NAME: eBPFForWindows
      NAME: ${{parameters.name}}
      BUILD_CONFIGURATION: $(buildConfiguration)
      BUILD_PLATFORM: x64
      TEST_COMMAND: ${{parameters.test_command}}
      PRE_COMMAND: ${{parameters.pre_test}}
      POST_COMMAND: ${{parameters.post_test}}
      EBPF_MEMORY_LEAK_DETECTION: ${{parameters.leak_detection}}
      # Skip Codesign Validation task, as ths is a test job.
      runCodesignValidationInjection: false

    steps:
      # Checking out the branch is needed to gather correct code coverage data.
      - checkout: self
        submodules: 'recursive'
        fetchDepth: 0
        # Only check out source code if code coverage is being gathered.
        condition: eq('${{parameters.code_coverage}}', 'true')
        displayName: 'Checkout Repo'