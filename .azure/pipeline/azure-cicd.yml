# Copyright (c) Microsoft Corporation
# SPDX-License-Identifier: MIT

#################################################################################
#                      OneBranch Pipelines - PR Build                           #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

# https://aka.ms/obpipelines/triggers
trigger:
  ## disable batching of changes when a push happens.
  batch: false
  branches:
    include:
    - main
    - release/*

pr:
- main
- release/*

schedules:
- cron: '00 21 * * *'
  displayName: Schedule CI/CD
  branches:
    include:
    - main
    - release/*
  always: true

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  system.debug: ${{ parameters.debug }}
  ENABLE_PRS_DELAYSIGN: 0
  ROOT: $(Build.SourcesDirectory)
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  NUGET_XMLDOC_MODE: none

  WindowsContainerImage: 'cdpxwin1809.azurecr.io/global/vse2022:latest' # Docker image which is used to build the project https://aka.ms/obpipelines/containers

jobs:

# regular
# Always run this job.
- ${{ if in(variables['Build.Reason'], 'PullRequest', 'BatchedCI', 'IndividualCI', 'Schedule') }}:
  - template: ./azure-reusable-build.yml
    parameters:
      name: regular
      build_artifact: Build-x64
      generate_release_package: true
      build_nuget: true
      build_options: /p:ReleaseJIT=True

# cmake
# Always run this job.
- ${{ if in(variables['Build.Reason'], 'PullRequest', 'BatchedCI', 'IndividualCI', 'Schedule') }}:
  - template: ./ob-reusable-cmake-build.yml
    parameters:
      build_artifact: Build-x64-cmake

# libfuzzer
# Always run this job.
- ${{ if in(variables['Build.Reason'], 'PullRequest', 'BatchedCI', 'IndividualCI', 'Schedule') }}:
  - template: ./ob-reusable-build.yml
    parameters:
      name: libfuzzer
      build_artifact: Build-x64-fuzzer
      cxx_flags: '/fsanitize-coverage=inline-bool-flag /fsanitize-coverage=edge /fsanitize-coverage=trace-cmp /fsanitize-coverage=trace-div'
      ld_flags: '"clang_rt.fuzzer_MD-x86_64.lib" "libsancov.lib"'
      build_options: /p:Fuzzer=True /t:tests\libfuzzer\execution_context_fuzzer /t:tests\libfuzzer\bpf2c_fuzzer /t:tests\libfuzzer\verifier_fuzzer /t:tests\libfuzzer\core_helper_fuzzer /t:tests\libfuzzer\netebpfext_fuzzer

# unit_tests
# Always run this job.
- ${{ if in(variables['Build.Reason'], 'PullRequest', 'BatchedCI', 'IndividualCI', 'Schedule') }}:
  - template: ./ob-reusable-test.yml
    parameters:
      name: unit_tests
      pre_test: appverif -enable Exceptions Handles Heaps Leak Locks Memory SRWLock Threadpool TLS DangerousAPIs DirtyStacks TimeRollOver -for unit_tests.exe
      test_command: '.\unit_tests.exe -d yes'
      dependency: regular
      build_artifact: Build-x64
      environment: windows-2022
      code_coverage: true
      gather_dumps: true
      capture_etw: true
      leak_detection: true
