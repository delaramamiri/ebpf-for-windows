# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

stages:

- stage: build_debug
  displayName: Build (Debug)
  dependsOn: []
  jobs:
  - template: ./.github/workflows/build.yml
    parameters:
      arch: x64
      config: Debug
      vmImage: windows-latest
      publish: false

# - stage: build_release
#   displayName: Build (Release)
#   dependsOn: []
#   jobs:
#   - template: ./.github/workflows/build.yml
#     parameters:
#       arch: x64
#       config: Release

# Some driver developers are building for WS2022 LTSC targets using VS2019 +
# the Windows Server 2022 WDK, so validate our project still builds in that
# environment.
- stage: build_debug_2019
  displayName: Build (VS2019 Debug)
  dependsOn: []
  jobs:
  - template: ./.github/workflows/build.yml
    parameters:
      arch: x64
      config: Debug
      vmImage: windows-2019
      publish: false


- stage: ws_2019
  displayName: Windows Server 2019
  dependsOn: []
  jobs:
  - job: build_x64
    displayName: x64
    pool:
      vmImage: windows-2019
    steps:
    - checkout: self
      submodules: true
      persistCredentials: true

    - task: VSBuild@1
      displayName: Build Solution (Release)
      inputs:
        solution: ebpf-for-windows.sln
        platform: x64
        configuration: release
        msbuildArgs: -m -p:UndockedBuildId=$(Build.BuildId)

    # - task: PowerShell@2
    #   displayName: Test Install
    #   inputs:
    #     targetType: inline
    #     script: |
    #       $DrvPath = Join-Path $(Get-Location) "build\bin\amd64fre\qeo.sys"
    #       $CertPath = Join-Path $(Get-Location) "build\CoreNetSignRoot.cer"
    #       .\src\test-sign.ps1 $DrvPath
    #       CertUtil.exe -addstore Root $CertPath
    #       CertUtil.exe -addstore TrustedPublisher $CertPath
    #       sc.exe create "qeo" type= kernel binpath= $DrvPath start= demand
    #       if ($LastExitCode) { Write-Error "Failed to install driver" }
    #       net.exe start qeo
    #       if ($LastExitCode) { Write-Error "Failed to start driver" }
    #       sc.exe query qeo
    #       net.exe stop qeo
    #       if ($LastExitCode) { Write-Error "Failed to stop driver" }
    #       sc.exe query qeo

# pool:
#   vmImage: "windows-latest"
  
# steps:
# - script: echo Hello, world!
#   displayName: 'Run a one-line script'

# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'
